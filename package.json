{
  "name": "serai-hotels",
  "version": "1.0.0",
  "description": "SERAI - Boutique Hotel Booking Reinvented",
  "private": true,
  "workspaces": [
    "frontend",
    "backend",
    "operations",
    "mobile",
    "webhooks",
    "ai-agents/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:operations\"",
    "dev:frontend": "cd frontend && npm run dev -- --port 4000",
    "dev:backend": "cd backend && npm run dev -- --port 4001",
    "dev:operations": "cd operations && npm run dev -- --port 4002",
    "dev:mobile": "cd mobile && npx react-native start --port 8082",
    "dev:webhook": "cd webhooks && npm run dev -- --port 4003",
    "dev:ai-agents": "concurrently \"npm run dev:concierge\" \"npm run dev:revenue\" \"npm run dev:reputation\"",
    "dev:concierge": "cd ai-agents/concierge && npm run dev -- --port 4004",
    "dev:revenue": "cd ai-agents/revenue && npm run dev -- --port 4005",
    "dev:reputation": "cd ai-agents/reputation && npm run dev -- --port 4006",
    "dev:housekeeping": "cd ai-agents/housekeeping && npm run dev -- --port 4007",
    "dev:checkin": "cd ai-agents/checkin && npm run dev -- --port 4008",
    "dev:maintenance": "cd ai-agents/maintenance && npm run dev -- --port 4009",
    "dev:upsell": "cd ai-agents/upsell && npm run dev -- --port 4010",
    "dev:insights": "cd ai-agents/insights && npm run dev -- --port 4011",
    "dev:listing": "cd ai-agents/listing && npm run dev -- --port 4012",
    "build": "npm run build:frontend && npm run build:backend && npm run build:operations",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:operations": "cd operations && npm run build",
    "build:mobile": "cd mobile && npm run build",
    "test": "npm run test:frontend && npm run test:backend && npm run test:operations",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "test:operations": "cd operations && npm test",
    "test:mobile": "cd mobile && npm test",
    "test:ai-agents": "npm run test:concierge && npm run test:revenue && npm run test:reputation",
    "test:concierge": "cd ai-agents/concierge && npm test",
    "test:revenue": "cd ai-agents/revenue && npm test",
    "test:reputation": "cd ai-agents/reputation && npm test",
    "lint": "npm run lint:frontend && npm run lint:backend && npm run lint:operations",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:operations": "cd operations && npm run lint",
    "lint:mobile": "cd mobile && npm run lint",
    "lint:ai-agents": "npm run lint:concierge && npm run lint:revenue && npm run lint:reputation",
    "lint:concierge": "cd ai-agents/concierge && npm run lint",
    "lint:revenue": "cd ai-agents/revenue && npm run lint",
    "lint:reputation": "cd ai-agents/reputation && npm run lint",
    "setup": "npm install && npm run setup:db && npm run migrate:db && npm run seed:db",
    "setup:db": "docker-compose -f docker-compose.dev.yml up -d postgres redis elasticsearch",
    "setup:ai": "npm run setup:concierge && npm run setup:revenue && npm run setup:reputation",
    "setup:concierge": "cd ai-agents/concierge && npm install",
    "setup:revenue": "cd ai-agents/revenue && npm install",
    "setup:reputation": "cd ai-agents/reputation && npm install",
    "migrate:db": "cd backend && npx prisma migrate dev",
    "seed:db": "cd backend && npx prisma db seed",
    "reset:db": "cd backend && npx prisma migrate reset",
    "docker:up": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:down": "docker-compose -f docker-compose.dev.yml down",
    "docker:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "docker:build": "docker-compose -f docker-compose.dev.yml build",
    "docker:restart": "npm run docker:down && npm run docker:up",
    "clean": "npm run clean:node_modules && npm run clean:build",
    "clean:node_modules": "find . -name 'node_modules' -type d -exec rm -rf {} +",
    "clean:build": "find . -name 'build' -type d -exec rm -rf {} + && find . -name 'dist' -type d -exec rm -rf {} +",
    "install:all": "npm install && npm run install:frontend && npm run install:backend && npm run install:operations && npm run install:mobile && npm run install:webhooks",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && npm install",
    "install:operations": "cd operations && npm install",
    "install:mobile": "cd mobile && npm install",
    "install:webhooks": "cd webhooks && npm install",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "start:operations": "cd operations && npm start",
    "start:mobile": "cd mobile && npm start",
    "start:webhook": "cd webhooks && npm start",
    "stop": "pkill -f 'node.*serai' || true",
    "health": "curl -f http://localhost:4001/health || exit 1",
    "logs": "tail -f logs/*.log",
    "backup:db": "cd backend && npx prisma db backup",
    "restore:db": "cd backend && npx prisma db restore",
    "deploy:staging": "npm run build && npm run deploy:staging:frontend && npm run deploy:staging:backend",
    "deploy:staging:frontend": "cd frontend && npm run deploy:staging",
    "deploy:staging:backend": "cd backend && npm run deploy:staging",
    "deploy:production": "npm run build && npm run deploy:production:frontend && npm run deploy:production:backend",
    "deploy:production:frontend": "cd frontend && npm run deploy:production",
    "deploy:production:backend": "cd backend && npm run deploy:production"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "nodemon": "^3.0.1",
    "typescript": "^5.2.2",
    "@types/node": "^20.8.0",
    "eslint": "^8.50.0",
    "prettier": "^3.0.3",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.1",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.5",
    "supertest": "^6.3.3",
    "@types/supertest": "^2.0.16"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Ben100mm/Ben100mm-serai-hotels.git"
  },
  "keywords": [
    "hotel",
    "booking",
    "boutique",
    "marketplace",
    "ai",
    "pricing",
    "hospitality",
    "travel"
  ],
  "author": "SERAI Team",
  "license": "UNLICENSED",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
