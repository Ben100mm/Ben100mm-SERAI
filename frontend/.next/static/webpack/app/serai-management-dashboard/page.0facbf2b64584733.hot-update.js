"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/serai-management-dashboard/page",{

/***/ "(app-pages-browser)/./src/hooks/useDashboardSync.ts":
/*!***************************************!*\
  !*** ./src/hooks/useDashboardSync.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDashboardSync: function() { return /* binding */ useDashboardSync; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WebSocketContext */ \"(app-pages-browser)/./src/contexts/WebSocketContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ useDashboardSync auto */ \n\nconst useDashboardSync = ()=>{\n    const { isConnected, connectionStatus } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useWebSocket)();\n    const { syncData, requestSync, sendSyncUpdate } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useSyncData)();\n    const { notifications, sendNotification } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useNotifications)();\n    const { updates, sendUpdate, getUpdate } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useRealTimeUpdates)();\n    const [dashboardData, setDashboardData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        partners: [],\n        properties: [],\n        revenue: {},\n        guestExperience: {},\n        operations: {},\n        lastSync: 0\n    });\n    const [syncStatus, setSyncStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        isSyncing: false,\n        lastSyncTime: null,\n        error: null,\n        syncCount: 0\n    });\n    // Sync all dashboard data\n    const syncAllData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setSyncStatus((prev)=>({\n                ...prev,\n                isSyncing: true,\n                error: null\n            }));\n        try {\n            if (isConnected) {\n                // Request sync for all data types via WebSocket\n                const dataTypes = [\n                    \"partners\",\n                    \"properties\",\n                    \"revenue\",\n                    \"guestExperience\",\n                    \"operations\"\n                ];\n                for (const dataType of dataTypes){\n                    requestSync(dataType);\n                }\n                // Send notification about successful sync\n                sendNotification(\"Dashboard Sync Complete\", \"All dashboard data has been synchronized successfully\", \"management-dashboard\");\n            } else {\n                // Fallback to mock data when WebSocket is not available\n                console.log(\"WebSocket not connected, using mock data\");\n                // Simulate API calls for mock data\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n                setDashboardData((prev)=>({\n                        ...prev,\n                        partners: [\n                            {\n                                id: \"1\",\n                                name: \"Sarah Johnson\",\n                                email: \"sarah.johnson@email.com\",\n                                partnershipModel: \"Master Lease\",\n                                properties: 3,\n                                revenue: 25500,\n                                status: \"Active\"\n                            },\n                            {\n                                id: \"2\",\n                                name: \"Michael Chen\",\n                                email: \"michael.chen@email.com\",\n                                partnershipModel: \"Revenue Share\",\n                                properties: 7,\n                                revenue: 42300,\n                                status: \"Active\"\n                            }\n                        ],\n                        properties: [\n                            {\n                                id: \"1\",\n                                name: \"Luxury Resort - Bali\",\n                                status: \"Active\",\n                                revenue: 8500,\n                                occupancy: 98\n                            },\n                            {\n                                id: \"2\",\n                                name: \"Boutique Hotel - Paris\",\n                                status: \"Maintenance\",\n                                revenue: 12300,\n                                occupancy: 92\n                            }\n                        ],\n                        revenue: {\n                            total: 2400000,\n                            partnerPayouts: 1800000,\n                            platformFees: 600000,\n                            profitMargin: 18\n                        },\n                        guestExperience: {\n                            satisfaction: 4.8,\n                            responseTime: 2.3,\n                            issueResolution: 94,\n                            reviewScore: 4.7\n                        },\n                        operations: {\n                            taskCompletion: 94,\n                            staffPerformance: 89,\n                            qualityScore: 4.6,\n                            efficiencyMetrics: 87\n                        },\n                        lastSync: Date.now()\n                    }));\n            }\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    lastSyncTime: Date.now(),\n                    syncCount: prev.syncCount + 1,\n                    isSyncing: false\n                }));\n        } catch (error) {\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    error: error instanceof Error ? error.message : \"Sync failed\",\n                    isSyncing: false\n                }));\n        }\n    }, [\n        isConnected,\n        requestSync,\n        sendNotification\n    ]);\n    // Sync specific data type\n    const syncDataType = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (dataType)=>{\n        if (!isConnected) {\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    error: \"WebSocket not connected\"\n                }));\n            return;\n        }\n        setSyncStatus((prev)=>({\n                ...prev,\n                isSyncing: true,\n                error: null\n            }));\n        try {\n            requestSync(dataType);\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    lastSyncTime: Date.now(),\n                    syncCount: prev.syncCount + 1,\n                    isSyncing: false\n                }));\n        } catch (error) {\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    error: error instanceof Error ? error.message : \"Sync failed\",\n                    isSyncing: false\n                }));\n        }\n    }, [\n        isConnected,\n        requestSync\n    ]);\n    // Send update to partner dashboard\n    const sendPartnerUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((updateType, data)=>{\n        sendUpdate(\"partner-dashboard\", updateType, data);\n        // Also send notification\n        sendNotification(\"Partner Dashboard Updated\", \"\".concat(updateType, \" has been updated and synchronized\"), \"partner-dashboard\");\n    }, [\n        sendUpdate,\n        sendNotification\n    ]);\n    // Send update to specific partner\n    const sendPartnerSpecificUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((partnerId, updateType, data)=>{\n        sendUpdate(\"partner-\".concat(partnerId), updateType, data);\n        sendNotification(\"Partner Update Sent\", \"Update sent to partner \".concat(partnerId), \"partner-\".concat(partnerId));\n    }, [\n        sendUpdate,\n        sendNotification\n    ]);\n    // Handle incoming sync data\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (syncData) {\n            const { action, dataType, payload } = syncData;\n            if (action === \"update\" && payload) {\n                setDashboardData((prev)=>({\n                        ...prev,\n                        [dataType]: payload,\n                        lastSync: Date.now()\n                    }));\n            }\n        }\n    }, [\n        syncData\n    ]);\n    // Handle real-time updates\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (updates.size > 0) {\n            // Process updates and update dashboard data\n            const newData = {\n                ...dashboardData\n            };\n            updates.forEach((update, key)=>{\n                const [entity, id] = key.split(\"-\");\n                if (entity === \"partner\") {\n                    // Update partner data\n                    const partnerIndex = newData.partners.findIndex((p)=>p.id === id);\n                    if (partnerIndex !== -1) {\n                        newData.partners[partnerIndex] = {\n                            ...newData.partners[partnerIndex],\n                            ...update\n                        };\n                    }\n                } else if (entity === \"property\") {\n                    // Update property data\n                    const propertyIndex = newData.properties.findIndex((p)=>p.id === id);\n                    if (propertyIndex !== -1) {\n                        newData.properties[propertyIndex] = {\n                            ...newData.properties[propertyIndex],\n                            ...update\n                        };\n                    }\n                }\n            });\n            setDashboardData(newData);\n        }\n    }, [\n        updates,\n        dashboardData\n    ]);\n    // Auto-sync on connection\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (isConnected && connectionStatus === \"connected\") {\n            // Initial sync when connected\n            syncAllData();\n            // Set up periodic sync (every 5 minutes)\n            const interval = setInterval(()=>{\n                syncAllData();\n            }, 5 * 60 * 1000);\n            return ()=>clearInterval(interval);\n        }\n    }, [\n        isConnected,\n        connectionStatus,\n        syncAllData\n    ]);\n    // Connection status monitoring\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (connectionStatus === \"error\") {\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    error: \"WebSocket connection error\",\n                    isSyncing: false\n                }));\n        } else if (connectionStatus === \"disconnected\") {\n            setSyncStatus((prev)=>({\n                    ...prev,\n                    error: \"WebSocket disconnected\",\n                    isSyncing: false\n                }));\n        }\n    }, [\n        connectionStatus\n    ]);\n    return {\n        // Data\n        dashboardData,\n        syncStatus,\n        notifications,\n        // Connection status\n        isConnected,\n        connectionStatus,\n        // Sync functions\n        syncAllData,\n        syncDataType,\n        sendPartnerUpdate,\n        sendPartnerSpecificUpdate,\n        // Real-time updates\n        getUpdate,\n        // Status helpers\n        isDataStale: ()=>{\n            const now = Date.now();\n            const staleThreshold = 10 * 60 * 1000; // 10 minutes\n            return !syncStatus.lastSyncTime || now - syncStatus.lastSyncTime > staleThreshold;\n        },\n        getLastSyncTime: ()=>{\n            return syncStatus.lastSyncTime ? new Date(syncStatus.lastSyncTime).toLocaleString() : \"Never\";\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useDashboardSync.ts\n"));

/***/ })

});